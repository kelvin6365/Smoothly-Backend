"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query @group(middleware: ["auth:api"]) {
    users: [User!]! @paginate(type: "paginator" model: "App\\User")
    user(id: ID @eq): User @find(model: "App\\User")
}

type Mutation{
    createUser(
        name:String @rules(apply: ["required"])
        username:String @rules(apply: ["required","unique:users,username"])
        user_type:String @rules(apply: ["required"])
        password:String @bcrypt @rules(apply: ["required"])
        email:String  @rules(apply: ["required","email","unique:users,email"])
    ): User @create(model:"App\\User")
}

type User {
    id: ID!
    name: String!
    username: String!
    user_type: String!
    UserPermissions: [UserPermission!]! @hasMany(relation:"UserPermission" ,type: "paginator")
    email: String!
	userDetail: UserDetail @hasOne
    created_at: DateTime!
    updated_at: DateTime!
}

type Team {
    id: ID!
    name: String!
    in_charge_user_id: ID!
	in_charge_user: User @hasOne
	TeamUsers: [TeamUser!]! @hasMany
	team_user: UserDetail @hasMany
}

type TeamUser {
    id: ID!
    user_id: ID!
	User: User @hasOne
    team_id: ID!
	Team: Team @hasOne
}

type UserDetail {
	id:ID!
	user_id:ID!
	team_id:ID!
	belongsToTeam: Team @hasOne
	job_title: String!
    location: String!
}

type Permission {
    id: ID!
    permission_type: String!
}

type UserPermission {
    id: ID! 
    permission_id: ID!
    jobboard_id: ID!
    user_id: ID!
    permission: Permission @hasOne
    jobboard: Jobboard @hasOne
    created_at: DateTime!
}

type Jobboard {
    id: ID!
    name: String!
    description: String!
	team_id:ID!
    active: String!
}